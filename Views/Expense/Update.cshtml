@model InAndOut.Models.Expense

@{
    ViewData["Title"] = "Update";
}

<h1>Update expense</h1>

<form method="post" asp-action="Update">
    <input asp-for="Id" hidden />
    <div class="border p-3">
        <div asp-validation-summary="All" class="text-danger"></div>
        <div class="form-group row">
            <h2 class="text-black-50 pl-3">Update Item</h2>
        </div>
        <div class="row">
            <div class="col-12">
                <div class="form-group row">
                    <div class="col-4">
                        <label asp-for="Name"></label>
                    </div>
                    <div class="col-4">
                        <label asp-for="Amount"></label>
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-4">
                        <input asp-for="Name" class="form-control" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                    <div class="col-4">
                        <input asp-for="Amount" class="form-control" />
                        <span asp-validation-for="Amount" class="text-danger"></span>
                    </div>
                </div>

            </div>
        </div>

        <div class="form-group row text-right p-3">
            <button type="submit" class="btn btn-primary">Update</button>
            &nbsp;
            <button class="btn btn-success cancel" asp-action="Index" disableValidation="true">Back</button>
        </div>

    </div>

</form>

@section Scripts {
    @{
        // local validation
        // by adding below partial page, it will validate using javascript and will not hit database for validation.
        <partial name="_ValidationScriptsPartial" />
    }
}